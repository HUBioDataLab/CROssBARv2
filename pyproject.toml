[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "bccb"
version = "0.0.3"
description = "Project description"
license = "MIT"
authors = [
    "Authors <author_email>"
]
packages = [
    { include = "bccb" }
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: The MIT License (MIT)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Natural Language :: English",
    "Topic :: Scientific/Engineering :: Bio-Informatics"
]
repository = "https://github.com/saezlab/python-project"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
toml = "*"
numpy = "^1.23.1"
tqdm = "^4.64.0"
pandas = "^2.0.1"
pypath-omnipath = "^0.15.4"
bioregistry = "^0.6.9"
biocypher = "^0.5.4"
psutil = "^5.9.4"

[tool.poetry.dev-dependencies]
pytest = ">=6.0"
tox = ">=3.20.1"
pre-commit = ">=2.17.0"
bump2version = "*"
coverage = ">=6.0"
sphinx = ">=5.0.0"
sphinx-rtd-theme = ">=1.0.0"
sphinx-last-updated-by-git = ">=0.3"
sphinx-autodoc-typehints = ">=1.18.0"
click = "8.0.1"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/saezlab/python-project/issues"

[tool.black]
line-length = 80
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
)
'''

[tool.isort]
from_first = true
line_length = 80
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
known_num="numpy,pandas"
sections = "FUTURE,STDLIB,THIRDPARTY,NUM,FIRSTPARTY,LOCALFOLDER"
no_lines_before="LOCALFOLDER"
balanced_wrapping = true
force_grid_wrap = 0
length_sort = "1"
indent = "    "

[tool.flake8]
ignore = ["D200", "D202", "D401", "D105", "W504"]
per-file-ignores = [
    "docs/src/conf.py:D100",
    "tests/*:D100,D101,D102",
    "*/__init__.py:F401"
]
max-line-length = 80
count = true

[tool.yapf]
based_on_style = "facebook"
split_penalty_before_if_expr = 0
split_penalty_import_names = 0
split_penalty_comprehension = 0
split_penalty_for_added_line_split = 0
split_penalty_after_opening_bracket = 0
split_before_first_argument = true
split_before_named_assigns = true
split_complex_comprehension = true

[tool.rstcheck]
report_level = "INFO"
ignore_directives = [
    "automodule",
    "toctree",
]
ignore_roles = ["ref"]
ignore_messages = '(Unknown target name:.*|No (directive|role) entry for "(auto)?(class|method|property|function|func|mod|attr)" in module "docutils\.parsers\.rst\.languages\.en"\.)'
